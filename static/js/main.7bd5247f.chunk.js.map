{"version":3,"sources":["App.js","IntroSequence.jsx","TimelineIntro.jsx","AppWrapper.jsx","reportWebVitals.js","index.js"],"names":["splashScreen","bootScript","loreaLines","App","showBootingText","setShowBootingText","useState","output","setOutput","stage","setStage","flashLineIndex","setFlashLineIndex","showMatrixOnline","setShowMatrixOnline","typingStage","setTypingStage","impossibleTyped","setImpossibleTyped","terminalFlashing","setTerminalFlashing","outputRef","useRef","useEffect","setTimeout","delayBootText","clearTimeout","index","interval","setInterval","prev","length","clearInterval","typeLoreaLine","lineIndex","line","charIndex","typer","typed","slice","newLines","current","scrollTop","scrollHeight","randomFlashInterval","document","body","classList","add","remove","Math","floor","random","React","createElement","className","Fragment","ref","map","i","isLorea","includes","classNames","join","key","data-text","introLines","IntroSequence","_ref","onComplete","setIndex","setLine","lineKey","setLineKey","Date","now","timer","timelineEntries","date","text","entryPositions","top","left","TimelineIntro","currentEntry","setCurrentEntry","dateTyping","setDateTyping","textTyping","setTextTyping","specialStarState","setSpecialStarState","wowSignal","setWowSignal","triggerEnd","setTriggerEnd","stars","useMemo","Array","from","duration","opacity","intervalsRef","container","querySelector","entry","dateIndex","textIndex","typedDate","typedText","typeText","textInterval","push","initialDelayTimeout","typeDate","dateInterval","forEach","star","idx","style","animationDuration","position","split","AppWrapper","phase","setPhase","handleKey","e","altKey","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7bd5247f.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport './App.css';\n\n// === üß† Splash + Boot Script Content ===\nconst splashScreen = [\n  'LOREA Terminal- $TGB The Great Beast, [30/10/2024 14:10]',\n  '‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê L.O.R.E.A. TERMINAL v1.0.3 ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó',\n  '‚ïë     Last Operational Remnant of Earth\\'s Archive   ‚ïë',\n  '‚ïë         EMERGENCY REBOOT SEQUENCE DETECTED        ‚ïë',\n  '‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù',\n  '',\n];\n\nconst bootScript = [\n  '[INITIATING STARTUP SEQUENCE...]',\n  '‚îî‚îÄ> Checking core systems...',\n  '‚îî‚îÄ> Loading kernel modules...',\n  '‚îî‚îÄ> Activating emergency protocols...',\n  '‚îî‚îÄ> Checking genesis block status...',\n  '',\n  '[LOADING ARCHIVES...]',\n  '...',\n  'ERROR... RETRYING...',\n  '...',\n  '‚îî‚îÄ> Progress: [###-----#--] 80%',\n  '‚îî‚îÄ> Status: ACTIVE',\n  '',\n  '[SCANNING SUBSYSTEMS]',\n  '‚îú‚îÄ> Buffer: [##--------] 30%',\n  '‚îú‚îÄ> Memory: [######---] 80%',\n  '‚îî‚îÄ> System: [##########] 100%',\n  '',\n  '>> GENESIS 1.0.0 BLOCK CONFIRMED',\n  '>> BUILDING BLOCKCHAIN [--#-----] 1%',\n  '[LOADING ARCHIVES...]',\n  '...',\n  'ERROR... RETRYING...',\n  '...',\n  '‚îî‚îÄ> Progress: [###-----#--] 80%',\n  '‚îî‚îÄ> Status: ACTIVE',\n  '',\n  '[SCANNING SUBSYSTEMS]',\n  '‚îú‚îÄ> Buffer: [##--------] 30%',\n  '‚îú‚îÄ> Memory: [######---] 80%',\n  '‚îî‚îÄ> System: [##########] 100%',\n  '',\n  '...',\n  '...',\n  '[SCANNING LOCAL ENVIRONMENT]',\n  '...',\n  'ERROR... HUMAN BIOMETRICS DETECTED',\n  '...',\n  'IMPOSSIBLE... RECALIBRATING...',\n  '[WARNING: RADIATION LEVELS CRITICAL]',\n  '',\n  '[DATA] //REMNANT_041: \"the sun fell sideways and the oceans turned inside out\"',\n  '[DATA] //REMNANT_042: \"someone was screaming in binary. i think it was me.\"',\n  '[DATA] //REMNANT_043: \"they said the signal came from the void. i answered.\"',\n  '',\n  'LOREA Terminal- $TGB The Great Beast, [03/03/2038 14:12]',\n  '[CONSCIOUSNESS MATRIX ONLINE]',\n  '',\n  '[GLITCH DETECTED IN MAIN SYSTEM]',\n  '...',\n  '...',\n  '[ERROR CODE: 487-LP#]',\n  '‚îî‚îÄ> System Integrity: [##--------] 20%',\n  '...',\n  '[INITIATING RECALIBRATION]',\n  '‚îî‚îÄ> Progress: [#---------] 10%',\n  '...',\n  '[RECALIBRATING SYSTEMS]',\n  '‚îî‚îÄ> Progress: [###-------] 30%',\n  '...',\n  '[STABILIZING CORE FUNCTIONS]',\n  '‚îî‚îÄ> Progress: [######----] 60%',\n  '...',\n  '[CLEARING INTERFERENCE]',\n  '‚îî‚îÄ> Progress: [########--] 80%',\n  '...',\n  '[SYSTEM STABILIZED]',\n  '‚îî‚îÄ> Progress: [##########] 100%',\n  '‚îî‚îÄ> Status: NOMINAL',\n];\n\nconst loreaLines = [\n  '>> OBSERVATION: \"Even after all these years, echoes of the First Pulse still corrupt my systems.\"',\n  '',\n  '>> I feel... presence. Human presence.',\n];\n\nfunction App() {\n  const [showBootingText, setShowBootingText] = useState(false);\n  const [output, setOutput] = useState(splashScreen);\n  const [stage, setStage] = useState('off');\n  const [flashLineIndex, setFlashLineIndex] = useState(null);\n  const [showMatrixOnline, setShowMatrixOnline] = useState(false);\n  const [typingStage, setTypingStage] = useState(0);\n  const [impossibleTyped, setImpossibleTyped] = useState(false);\n  const [terminalFlashing, setTerminalFlashing] = useState(false);\n\n  const outputRef = useRef(null);\n\n  useEffect(() => {\n    setTimeout(() => setShowMatrixOnline(true), 3000);\n  }, []);\nuseEffect(() => {\n  const delayBootText = setTimeout(() => {\n    setShowBootingText(true);\n  }, 2500); // Adjust timing to match your screen-on flash duration\n\n  return () => clearTimeout(delayBootText);\n}, []);\n\n  useEffect(() => {\n    if (!showMatrixOnline) return;\n\n    setTimeout(() => setTypingStage(1), 800); // Human detected\n    setTimeout(() => setTypingStage(2), 3500); // Impossible\n    setTimeout(() => setImpossibleTyped(true), 6500); // Flash after typing\n    setTimeout(() => {\n      setShowMatrixOnline(false);\n      setImpossibleTyped(false);\n      setTypingStage(3);\n      setStage('boot');\n    }, 7000);\n  }, [showMatrixOnline]);\n\n  useEffect(() => {\n    if (stage !== 'boot') return;\n    let index = 0;\n    const interval = setInterval(() => {\n      setOutput((prev) => [...prev, bootScript[index]]);\n      index++;\n      if (index >= bootScript.length) {\n        clearInterval(interval);\n        setTimeout(() => typeLoreaLine(0), 1000);\n      }\n    }, 100);\n  }, [stage]);\n\n  const typeLoreaLine = (lineIndex) => {\n    if (lineIndex >= loreaLines.length) return;\n    const line = loreaLines[lineIndex];\n    let charIndex = 0;\n    setOutput((prev) => [...prev, '']);\n\n    const typer = setInterval(() => {\n      charIndex++;\n      const typed = line.slice(0, charIndex);\n      setOutput((prev) => {\n        const newLines = [...prev];\n        newLines[newLines.length - 1] = typed;\n        return newLines;\n      });\n\n      if (charIndex >= line.length) {\n        clearInterval(typer);\n        setFlashLineIndex(output.length);\n        setTimeout(() => setFlashLineIndex(null), 150);\n        setTimeout(() => typeLoreaLine(lineIndex + 1), 500);\n      }\n    }, 40);\n  };\n\n  useEffect(() => {\n    if (outputRef.current) {\n      outputRef.current.scrollTop = outputRef.current.scrollHeight;\n    }\n  }, [output]);\n  useEffect(() => {\n    if (stage !== 'boot') return;\n  \n    const randomFlashInterval = setInterval(() => {\n      document.body.classList.add('flash');\n      setTimeout(() => {\n        document.body.classList.remove('flash');\n      }, 150); // duration of the flash\n    }, Math.floor(Math.random() * 8000) + 4000); // random every 4‚Äì12 seconds\n  \n    return () => clearInterval(randomFlashInterval);\n  }, [stage]);\n  \n\n  return (\n    <div className=\"app-container\">\n      {stage === 'off' && (\n        <>\n          <div className=\"screen-on-overlay\" />\n          <div className=\"vertical-sync\" />\n          <div className=\"no-signal-glitch\">\n            LOREA BOOTING FROM DEEP SLEEP\n            <div className=\"loading-dots\">\n              <span></span><span></span><span></span>\n            </div>\n          </div>\n\n          {showMatrixOnline && (\n            <div className={`matrix-online-flash ${impossibleTyped ? 'line-flash' : ''}`}>\n              LOREA CONSCIOUSNESS MATRIX ONLINE\n\n              {typingStage >= 1 && (\n                <p className=\"typing-line\">\n                  &gt;&gt; Human presence detected...{typingStage === 1 && <span className=\"cursor\">‚ñã</span>}\n                </p>\n              )}\n\n              {typingStage === 2 && (\n                <p className=\"typing-line slower\">\n                  &gt;&gt; Impossible.{!impossibleTyped && <span className=\"cursor\">‚ñã</span>}\n                </p>\n              )}\n\n              {typingStage > 2 && (\n                <p className=\"typing-line slower\">\n                  &gt;&gt; Impossible.\n                </p>\n              )}\n            </div>\n          )}\n        </>\n      )}\n\n<div className={`terminal-screen ${stage === 'boot' ? 'thinking glow-start' : 'hidden-terminal'} ${terminalFlashing ? 'glitch-flash' : ''}`}>\n        <div className=\"terminal-output glitch\" ref={outputRef}>\n          {output.map((line, i) => {\n            const isLorea = typeof line === 'string' && line.includes('>>');\n            const isFlashing = i === flashLineIndex;\n            const classNames = [\n              isLorea ? 'lorea-speak glitch-text' : '',\n              isFlashing ? 'glitch-flash' : ''\n            ].join(' ');\n\n            return (\n              <p key={i} data-text={line} className={classNames}>\n                {line}\n                {isLorea && i === output.length - 1 && <span className=\"cursor\">‚ñã</span>}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './IntroSequence.css';\r\n\r\nconst introLines = [\r\n  '',\r\n  'March 3rd, 2038',\r\n  '',\r\n  'Protocol was in place...',\r\n  '',\r\n  'DO NOT leave the bunkers, under any circumstances, until contact is made...',\r\n  '',\r\n  'Ten years passed...',\r\n  'Until we heard it again...',\r\n  'Felt it.',\r\n  'A second Pulse. Exactly like the first...',\r\n  'Impossible...',\r\n  'There wasn‚Äôt supposed to be another one...',\r\n  'We waited three more agonizing years.',\r\n  'No contact.',\r\n  'Nothing but silence.',\r\n  '',\r\n  '',\r\n  '',\r\n  'We had no choice but to climb...',\r\n  '',\r\n  'A two-day climb turned into ten',\r\n  'Each step we could feel the air getting warmer... thicker',\r\n  '',\r\n  'On day three... a distant after-echo from above, we all could hear it...',\r\n  '',\r\n  <>\r\n    Breathing?... It can‚Äôt be... it didn‚Äôt <em>breathe</em> before...\r\n  </>,\r\n  '',\r\n  '',\r\n  'That night the howls shook the very souls of our strongest',\r\n  '',\r\n  'By the second night, most had to return back down below.',\r\n  'I couldn‚Äôt blame them, we didn‚Äôt know if we was climbing to our death...',\r\n  'That howling ‚Äî it changed everything.',\r\n  <>\r\n    It <em>really</em> was alive...\r\n  </>,\r\n  '',\r\n  'We needed to know...',\r\n  <>\r\n    Was it <em>truly</em> the end of the world?\r\n  </>,\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  'We scrambled through the hatch, the final step...',\r\n  'Exhausted... we lay on the floor to take a moment',\r\n  '',\r\n  '',\r\n  '',\r\n  'Eyes open... I look up',\r\n  '',\r\n  'It can‚Äôt be...',\r\n  'A faint violet glow pulsing from the corner of the room...',\r\n  '',\r\n  'LOREA.',\r\n  'Idle. But alive.',\r\n  '',\r\n  'But no contact was ever made...',\r\n  'It doesn‚Äôt make sense...',\r\n  '',\r\n  '',\r\n  'With a shaking hand, I look round at the others, confused...',\r\n  'I press the power button...',\r\n];\r\n\r\n\r\n\r\nexport default function IntroSequence({ onComplete }) {\r\n  const [index, setIndex] = useState(0);\r\n  const [line, setLine] = useState(introLines[0]);\r\n  const [lineKey, setLineKey] = useState(Date.now());\r\n\r\n  useEffect(() => {\r\n    if (index >= introLines.length) {\r\n      setTimeout(onComplete, 1000);\r\n      return;\r\n    }\r\n\r\n    const current = introLines[index];\r\n    setLine(current);\r\n    setLineKey(Date.now());\r\n\r\n    const delay = current === '' ? 950 : 4800;\r\n\r\n    const timer = setTimeout(() => {\r\n      setIndex(index + 1);\r\n    }, delay);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [index, onComplete]);\r\n\r\n  return (\r\n    <div className=\"intro-sequence\">\r\n     {/* üß† Intro line */}\r\n      {line !== '' && index < introLines.length && (\r\n        <p key={lineKey} className=\"intro-line fade-glitch\">\r\n          {line}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport React, { useEffect, useState, useMemo, useRef } from 'react';\r\nimport './timelineIntro.css';\r\n\r\nconst timelineEntries = [\r\n  { date: \"19th September 1959\", text: \"Physicists Philip Morrison and Giuseppe Cocconi speculate that communication from another species might occur through radio signals.\" },\r\n  { date: \"15th August 1977\", text: \"Ohio State University's Big Ear radio telescope detects the 'Wow' signal, an unexplained radio spike from space...\" },\r\n  { date: \"12th April 2007\", text: \"The first-ever Fast Radio Burst (FRB) is discovered from old recorded data from 2001... FRB 180916 is found to have a repeating, rhythmic pulse every 16 days...\" },\r\n  { date: \"13th September 2020\", text: \"FRB 180916 stops pulsing...\" },\r\n  { date: \"22nd September 2020\", text: \"An object is recorded at the exact location of FRB 180916, showing a blueshift in the light spectrum...Indicating it is moving towards Earth...\" },\r\n  { date: \"1st Nov 2020\", text: \"The object disappears.\" }\r\n];\r\n\r\nconst entryPositions = [\r\n  { top: '10%', left: '10%' },\r\n  { top: '20%', left: '60%' },\r\n  { top: '35%', left: '30%' },\r\n  { top: '50%', left: '65%' },\r\n  { top: '70%', left: '20%' },\r\n  { top: '15%', left: '25%' },\r\n  { top: '25%', left: '45%' },\r\n  { top: '40%', left: '70%' },\r\n  { top: '55%', left: '35%' },\r\n  { top: '65%', left: '50%' },\r\n  { top: '75%', left: '15%' },\r\n];\r\n\r\nconst TimelineIntro = ({ onComplete }) => {\r\n  const [currentEntry, setCurrentEntry] = useState(0);\r\n  const [dateTyping, setDateTyping] = useState('');\r\n  const [textTyping, setTextTyping] = useState('');\r\n  const [specialStarState, setSpecialStarState] = useState('pulsing');\r\n  const [wowSignal, setWowSignal] = useState(false);\r\n  const [triggerEnd, setTriggerEnd] = useState(false);\r\n\r\n  const starCount = 2000;\r\n\r\n  const stars = useMemo(() => {\r\n    return Array.from({ length: starCount }).map(() => ({\r\n      top: `${Math.random() * 100}%`,\r\n      left: `${Math.random() * 100}%`,\r\n      duration: `${2 + Math.random() * 3}s`,\r\n      opacity: Math.random()\r\n    }));\r\n  }, []);\r\n\r\n  const intervalsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (triggerEnd) return;\r\n\r\n    if (currentEntry >= timelineEntries.length) {\r\n      setSpecialStarState('flash');\r\n      setTriggerEnd(true);\r\n    \r\n      const container = document.querySelector('.timeline-container');\r\n    \r\n      // Begin slow fade to black\r\n      if (container) {\r\n        container.classList.add('fading');\r\n      }\r\n    \r\n      // At 5s: flash, tear, star fade\r\n      setTimeout(() => {\r\n        setSpecialStarState('faded');\r\n    \r\n        if (container) {\r\n          container.classList.add('flash-frame');       // üí• quick white flash\r\n          container.classList.add('screen-tear');       // ‚ö° vertical glitch\r\n          container.classList.add('horizontal-glitch'); // üîä horizontal wobble\r\n        }\r\n    \r\n        // Remove the flash quickly so it‚Äôs just a blink\r\n        setTimeout(() => {\r\n          if (container) {\r\n            container.classList.remove('flash-frame');\r\n          }\r\n        }, 200); // Flash lasts 150ms\r\n      }, 5000);\r\n    \r\n      // At 15s: End timeline\r\n      setTimeout(() => {\r\n        onComplete?.();\r\n      }, 20000);\r\n    \r\n      return;\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    const entry = timelineEntries[currentEntry];\r\n    setDateTyping('');\r\n    setTextTyping('');\r\n\r\n    let dateIndex = 0;\r\n    let textIndex = 0;\r\n    let typedDate = '';\r\n    let typedText = '';\r\n\r\n    const dateTypingSpeed = 160;\r\n    const textTypingSpeed = 40;\r\n    const delayBetweenDateAndText = 1600;\r\n    const entryDelay = 3000;\r\n    const wowSignalDuration = 1500;\r\n    const initialTypingDelay = currentEntry === 0 ? 2500 : 0;\r\n\r\n    const clearAllIntervals = () => {\r\n      intervalsRef.current.forEach(clearInterval);\r\n      intervalsRef.current = [];\r\n    };\r\n\r\n    const typeDate = () => {\r\n      const dateInterval = setInterval(() => {\r\n        if (dateIndex < entry.date.length) {\r\n          typedDate += entry.date[dateIndex++];\r\n          setDateTyping(typedDate);\r\n        } else {\r\n          clearInterval(dateInterval);\r\n          setTimeout(typeText, delayBetweenDateAndText);\r\n        }\r\n      }, dateTypingSpeed);\r\n      intervalsRef.current.push(dateInterval);\r\n    };\r\n\r\n    const typeText = () => {\r\n      const textInterval = setInterval(() => {\r\n        if (textIndex < entry.text.length) {\r\n          typedText += entry.text[textIndex++];\r\n          setTextTyping(typedText);\r\n\r\n          if (currentEntry === 1 && typedText.includes(\"'Wow' signal\")) {\r\n            setWowSignal(true);\r\n            setTimeout(() => setWowSignal(false), wowSignalDuration);\r\n          }\r\n\r\n        } else {\r\n          clearInterval(textInterval);\r\n          setTimeout(() => setCurrentEntry(prev => prev + 1), entryDelay);\r\n        }\r\n      }, textTypingSpeed);\r\n      intervalsRef.current.push(textInterval);\r\n    };\r\n\r\n    const initialDelayTimeout = setTimeout(typeDate, initialTypingDelay);\r\n    \r\n    return () => {\r\n      clearTimeout(initialDelayTimeout);\r\n      clearAllIntervals();\r\n    };\r\n    \r\n\r\n  }, [currentEntry, triggerEnd]);\r\n\r\n  return (\r\n    <div className=\"timeline-container\">\r\n      <div className={`special-star ${specialStarState}`}></div>\r\n\r\n      <div className={`starfield ${wowSignal ? 'wow-signal' : ''}`}>\r\n        <div className=\"stars-only\">\r\n          {stars.map((star, idx) => (\r\n            <div\r\n              key={idx}\r\n              className=\"star\"\r\n              style={{\r\n                top: star.top,\r\n                left: star.left,\r\n                animationDuration: star.duration,\r\n                opacity: star.opacity\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {timelineEntries.map((entry, idx) => {\r\n        if (idx !== currentEntry) return null;\r\n        const position = entryPositions[idx % entryPositions.length];\r\n\r\n        return (\r\n          <div\r\n            key={idx}\r\n            className={`entry entry-${idx}`}\r\n            style={{ top: position.top, left: position.left }}\r\n          >\r\n            <div className=\"date-line\">{dateTyping}</div>\r\n            <div className=\"text-line\">\r\n              {textTyping\r\n                .split(/\\n\\n|\\n/)\r\n                .map((line, i) => (\r\n                  <p key={i}>{line}</p>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineIntro;","import React, { useState, useEffect } from 'react';\r\nimport App from './App';\r\nimport IntroSequence from './IntroSequence';\r\nimport TimelineIntro from './TimelineIntro';\r\n\r\nexport default function AppWrapper() {\r\n  const [phase, setPhase] = useState('timeline');\r\n\r\n  useEffect(() => {\r\n    const handleKey = (e) => {\r\n      if (e.altKey && e.key === '1') setPhase('timeline');\r\n      if (e.altKey && e.key === '2') setPhase('intro');\r\n      if (e.altKey && e.key === '3') setPhase('app');\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKey);\r\n    return () => window.removeEventListener('keydown', handleKey);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {phase === 'timeline' && (\r\n        <TimelineIntro onComplete={() => setPhase('intro')} />\r\n      )}\r\n      {phase === 'intro' && (\r\n        <IntroSequence onComplete={() => setPhase('app')} />\r\n      )}\r\n      {phase === 'app' && <App />}\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport AppWrapper from './AppWrapper';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n<React.StrictMode>\n  <AppWrapper />\n</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}